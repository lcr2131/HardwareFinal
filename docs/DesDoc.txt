 Section	1:	Title	page
. Project	title

. Team		name T.L.D.C.S. (Team Learned Designers Collaborating Sensibly)

. Project	members:
 Shuying Fan 
 Donald Pomeroy
 Leonard Robinson
 Corey Stappenbeck
 Tong Zhang

. Project	member	duties	
o Design	Master       - Shuying Fan
o Design Master       - Tong Zhang
o Verification	Master - Leonard Robinson
o Verification Master - Donald Pomeroy
o Integration Master  - Corey Stappenbeck
 Section	2:	Design		Overview	(A	simple	plain	English	description)
 
Basic techniques to exploit instruction level parallelism such as loop unrolling, branchprediction, 
dynamic scheduling, and speculation only suffice to reduce the Clocks Per Instruction (CPI) to a 
minimum of 1. If we seek to improve performance further, we must reduce the CPI to less than 1.
Multiple-issue processors help us achieve this goal by permitting multiple instructions to issue in a 
clock cycle.

Your design should allow for the following: 
1. Allow fetch, decode, issue and commit of two instructions every cycle as possible. 
2. You will need to create a multi--‐ported register file. 
3. Assume four ALUs and multiple copies of other processing elements as needed. 
4. Allow out--‐of--‐order execution. 
The pipeline will attempt to fetch, decode, issue and commit 2 instructions each cycle. 
The ideal achievable CPI is, therefore, 2. 
Note that you will be required to implement Register renaming 
(cf. H&P, more materials available on request) and speculative execution with simple 
always--‐taken branch prediction. 

Section	3:	Unit		Level		interfaces
Section	4:	Subunit		partitioning	and	interfaces,	Test	harness	structure
Section	5:	Microarchitecture		design
Section	6:	Verification			strategy	
Section	7:	Performance			estimates
Section	8:	Area				estimates
Section	9:	Bugs,				Coverage,
Section	10:	Document			revision	history
